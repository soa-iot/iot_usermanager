<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="cn.soa.dao.UserMapper">

	<!-- ===========================1、查询===============================  -->
	
	<!-- 1.1、根据id查询用户信息 -->
	<select id="findUserById" parameterType="string" resultType="cn.soa.entity.UserOrganization">
		select * from iot_user_organization
		where orgid = #{userId} and state = 1
	</select>
	
	<!-- 1.2、根据用户唯一标识查询组织 -->
	<select id="findUserByUsernum" parameterType="string" resultType="cn.soa.entity.UserOrganization">
		select * from iot_user_organization
		where usernum = #{userNum} and state = 1
	</select>	
	
	<!-- 1.3、查询所有用户信息 -->
	<select id="findUserAll" resultType="cn.soa.entity.UserOrganization">
		select * from iot_user_organization where IS_PARENT = 0 and state = 1
	</select>	
	
	<!-- 1.4、查询所有用户非组织信息 -->
	<select id="findUsersAll" resultType="cn.soa.entity.UserOrganization">
		select * from iot_user_organization where IS_PARENT = 1 and state = 1
	</select>
	
	<!-- 1.5、根据用户唯一标识查询用户 -->
	<select id="findUsersByNum" parameterType="string" resultType="cn.soa.entity.UserOrganization">
		select * from iot_user_organization
		where IS_PARENT = 1 and state = 1 and usernum like '%' || #{userNum} || '%'
	</select>	
	
	<!-- 1.6、根据用户唯一标识查询用户上一级父组织 	-->
	<select id="findUserFirstParentByNum" parameterType="string" resultType="cn.soa.entity.UserOrganization">
		select * from iot_user_organization 
		where usernum = (
						select parent_id from iot_user_organization
						where usernum = #{usernum}  and state = 1
					  )
	</select>
	<!-- 1.7、根据用户唯一标识查询用户上两级父组织 	-->
	<select id="findUserSecondParentByNum" parameterType="string" resultType="cn.soa.entity.UserOrganization">
		select * from iot_user_organization 
		where usernum = (
						select parent_id from iot_user_organization
						where usernum =(
                select parent_id from iot_user_organization
                where usernum = #{usernum}   and state = 1
                )
			)
	</select>
	
	<!-- 1.8、根据用户唯一标识查询用户上三级父组织 	-->
	<select id="findUserThirdParentByNum" parameterType="string" resultType="cn.soa.entity.UserOrganization">
		select * from iot_user_organization 
		where usernum = (
						select parent_id from iot_user_organization
						where usernum =(
                select parent_id from iot_user_organization
                where usernum =(
                    select parent_id from iot_user_organization
                    where usernum = #{usernum}   and state = 1 
                    ) 
                )
			)
	</select>
	
	<!-- 1.9、根据用户姓名查询用户上一级父组织 	-->
	<select id="findUserFirstParentByName" parameterType="string" resultType="cn.soa.entity.UserOrganization">
		select * from iot_user_organization 
		where usernum = (
						select parent_id from iot_user_organization
						where name = #{name}  and state = 1
					  )
	</select>
	
	<!-- 1.10、根据用户姓名查询用户上两级父组织 	-->
	<select id="findUserSecondParentByName" parameterType="string" resultType="cn.soa.entity.UserOrganization">
		select * from iot_user_organization 
		where usernum = (
						select parent_id from iot_user_organization
						where usernum =(
                select parent_id from iot_user_organization
                where name = #{name}    and state = 1
                )
			)
	</select>
	
	<!-- 1.11、根据用户姓名查询用户上三级父组织 	-->
	<select id="findUserThirdParentByName" parameterType="string" resultType="cn.soa.entity.UserOrganization">
		select * from iot_user_organization 
		where usernum = (
						select parent_id from iot_user_organization
						where usernum =(
                select parent_id from iot_user_organization
                where usernum =(
                    select parent_id from iot_user_organization
                    where name = #{name}  and state = 1     
                    ) 
                )
			)
	</select>
	
	<!-- 1.12、根据用户id查找事务号 -->
	<select id="findRemark2ById" parameterType="string" resultType="string">
		select REMARK2 from iot_user_organization 
		where orgid = #{orgid}
	</select>

	
	
	<!-- ===========================2、新增===============================  -->
	
	<!-- 2.1、根据id增加用户组织 -->
	<insert id="saveUser"  parameterType="cn.soa.entity.UserOrganization">
		insert into iot_user_organization
		( name, parent_id, usernum, user_password, is_parent, state, note, remark1, remark2)
		values
		(#{userOrgan.name,jdbcType=VARCHAR}, #{userOrgan.parent_id,jdbcType=VARCHAR}, 
		 #{userOrgan.usernum,jdbcType=VARCHAR},#{userOrgan.user_password,jdbcType=VARCHAR}, 
		 #{userOrgan.is_parent,jdbcType=INTEGER},#{userOrgan.state,jdbcType=INTEGER},
		 #{userOrgan.note,jdbcType=VARCHAR},		 
		 #{userOrgan.remark1,jdbcType=INTEGER}, #{userOrgan.remark2,jdbcType=VARCHAR})
	</insert>
	
	<!-- 2.2、根据id增加组织 ，返回id			
	<insert id="saveUserBackId"  parameterType="cn.soa.entity.UserOrganization">		
		<selectKey resultType ="java.lang.Integer" keyProperty= "userOrgan.orgid" keyColumn="orgid" order= "AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey >-->
	<insert id="saveOrganBackId"  useGeneratedKeys="true" keyProperty="orgid" keyColumn="orgid" parameterType="cn.soa.entity.UserOrganization">
		insert into iot_user_organization
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="parent_id != null">
				parent_id,
			</if>
			<if test="usernum != null">
				usernum,
			</if>
			<if test="user_password != null">
				user_password,
			</if>
			<if test="is_parent != null">
				is_parent,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="note != null">
				note,
			</if>
			<if test="remark1 != null">
				remark1,
			</if>
			<if test="remark2 != null">
				remark2
			</if>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null ">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="parent_id != null">
				#{parent_id,jdbcType=VARCHAR},
			</if>
			<if test="usernum != null">
				#{usernum,jdbcType=VARCHAR},	  
			</if>
			<if test="user_password != null">
				#{user_password,jdbcType=VARCHAR},
			</if>
			<if test="is_parent != null">
				#{is_parent,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="note != null">
				#{note,jdbcType=VARCHAR},
			</if>
			<if test="remark1 != null">
				#{remark1,jdbcType=INTEGER},
			</if>
			<if test="remark2 != null">
				#{remark2,jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>
	
	<!-- 2.3、根据id增加用户 ，返回id -->
	<insert id="saveUserBackId"  useGeneratedKeys="true" keyProperty="orgid" keyColumn="orgid" parameterType="cn.soa.entity.UserOrganization">
		insert into iot_user_organization
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="parent_id != null">
				parent_id,
			</if>
			<if test="usernum != null">
				usernum,
			</if>
			<if test="user_password != null">
				user_password,
			</if>			
			<if test="state != null">
				state,
			</if>
			<if test="note != null">
				note,
			</if>
			<if test="remark1 != null">
				remark1,
			</if>
			<if test="remark2 != null">
				remark2,
			</if>
			is_parent
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null ">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="parent_id != null">
				#{parent_id,jdbcType=VARCHAR},
			</if>
			<if test="usernum != null">
				#{usernum,jdbcType=VARCHAR},	  
			</if>
			<if test="user_password != null">
				#{user_password,jdbcType=VARCHAR},
			</if>			
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="note != null">
				#{note,jdbcType=VARCHAR},
			</if>
			<if test="remark1 != null">
				#{remark1,jdbcType=INTEGER},
			</if>
			<if test="remark2 != null">
				#{remark2,jdbcType=VARCHAR},
			</if>
			<if test="is_parent != null">
				#{is_parent,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	
	<!-- 2.4、根据id批量增加用户信息 -->
	<insert id="saveUserByBatch" parameterType="list" useGeneratedKeys="true" >	
		insert into iot_user_organization
		( name, parent_id, usernum, user_password, is_parent, state, note, remark1, remark2)
		values
		<foreach collection="userOrgans" separator=","  item="item"  >
			(#{item.name,jdbcType=VARCHAR}, #{item.parent_id,jdbcType=VARCHAR}, 
			 #{item.usernum,jdbcType=VARCHAR},#{item.user_password,jdbcType=VARCHAR}, 
			 #{item.is_parent,jdbcType=INTEGER}, #{item.note,jdbcType=VARCHAR},
			 #{item.state,jdbcType=INTEGER},
			 #{item.remark1,jdbcType=INTEGER}, #{item.remark2,jdbcType=VARCHAR})
		</foreach>  
	</insert>
	
	
	
	
	<!-- ===========================3、修改===============================  -->	
	
	<!-- 3.1、根据num修改用户信息 -->
	<update id="modifyUserBynum" parameterType="cn.soa.entity.UserOrganization">
		update iot_user_organization		
		<trim prefix="set" suffix="where usernum = #{userOrgan.usernum}" suffixOverrides="," >
			<if test="userOrgan.name != null">
				name = #{ userOrgan.name },
			</if>
			<if test="userOrgan.parent_id != null">
				parent_id = #{ userOrgan.parent_id },
			</if>
			<if test="userOrgan.user_password != null">
				user_password = #{ userOrgan.user_password },
			</if>
			<if test="userOrgan.state != null">
				state = #{ userOrgan.state },
			</if>
			<if test="userOrgan.note != null">
				note = #{ userOrgan.note }, 
			</if>
			<if test="userOrgan.is_parent != null">
				is_parent = #{ userOrgan.is_parent }, 
			</if>
			<if test="userOrgan.remark1 != null">
				remark1 = #{ userOrgan.remark1 }, 
			</if>
			<if test="userOrgan.remark2 != null">
				remark2 = #{ userOrgan.remark2 }
			</if>
		</trim>
	</update>
	
	<!-- 3.2、根据id修改用户 -->
	<update id="modifyUserById" parameterType="cn.soa.entity.UserOrganization">
		update iot_user_organization		
		<trim prefix="set" suffix="where orgid = #{userOrgan.orgid}" suffixOverrides="," >
			<if test="userOrgan.usernum != null">
				usernum = #{ userOrgan.usernum },
			</if>
			<if test="userOrgan.name != null">
				name = #{ userOrgan.name },
			</if>
			<if test="userOrgan.parent_id != null">
				parent_id = #{ userOrgan.parent_id },
			</if>
			<if test="userOrgan.user_password != null">
				user_password = #{ userOrgan.user_password },
			</if>
			<if test="userOrgan.state != null">
				state = #{ userOrgan.state },
			</if>
			<if test="userOrgan.note != null">
				note = #{ userOrgan.note }, 
			</if>
			<if test="userOrgan.is_parent != null">
				is_parent = #{ userOrgan.is_parent }, 
			</if>
			<if test="userOrgan.remark1 != null">
				remark1 = #{ userOrgan.remark1 }, 
			</if>
			<if test="userOrgan.remark2 != null">
				remark2 = #{ userOrgan.remark2 }
			</if>
		</trim>
	</update>
	
	<!-- 3.3、根据id修改用户 -->
	<update id="updateUserStateById" parameterType="int">
		update iot_user_organization		
		set state = 2
		where orgid = #{id}
	</update>
	
	
	<!-- 3.4、根据id修改用户和事务号 -->
	<update id="updateStateAndRemark2ById">
		update iot_user_organization		
		set state = 2 , remark2 = #{number}
		where orgid = #{orgid} 
	</update>
	
	
	
	
	
	
<!-- ===========================4、删除===============================  -->		

	<!-- 4.1、根据id删除用户 -->
	<delete id="deleteUserById" parameterType="string">
		delete from iot_user_organization
		where orgid = #{ userid } and state = 1
	</delete>
	
	<!-- 4.2、根据usernum删除用户 -->
	<delete id="deleteUserByUsernum" parameterType="string">
		delete from iot_user_organization
		where usernum = #{usernum} and state = 1
	</delete>
	
</mapper>
 

